#! /bin/sh

die() {
    echo
    echo "$@"
    exit 1
}

# Ensure CA Certs are installed
# Adding Certificates
doas cp "$HOME/certs/api.nuget.local.pem" /usr/local/share/ca-certificates/ || die "could not import api.nuget.local.pem"
doas cp "$HOME/certs/funfair.nuget.local.pem" /usr/local/share/ca-certificates/ || die "could not import funfair.nuget.local.pem"
doas cp "$HOME/certs/funfair-prerelease.nuget.local.pem" /usr/local/share/ca-certificates/ || die "could not import funfair-prerelease.nuget.local.pem"
doas update-ca-certificates || die "could not import certificates"

# Dotnet settings
export DOTNET_ROOT="$HOME/dotnet"
export DOTNET_INSTALL_DIR="$DOTNET_ROOT"
export DOTNET_MULTILEVEL_LOOKUP="false"
export DOTNET_NOLOGO="true"
export DOTNET_PRINT_TELEMETRY_MESSAGE="false"
export DOTNET_JitCollect64BitCounts="1"
export DOTNET_ReadyToRun="1"
export DOTNET_TC_QuickJitForLoops="1"
export DOTNET_TC_CallCountingDelayMs="0"
export DOTNET_TieredPGO="1"
export MSBUILDTERMINALLOGGER="auto"

VERSIONS_TO_INSTALL="8.0 9.0 10.0"
[ -f "/bin/bash" ] || die "bash not found"

TOOLS="sleet \
       TSQLLint \
       FunFair.BuildCheck \
       FunFair.BuildVersion \
       Credfeto.Changelog.Cmd \
       Credfeto.Package.Push \
       Credfeto.Package.Update \
       FunFair.Content.Packager.Cmd \
       FunFair.Content.PackageSigner.Cmd \
       JetBrains.ReSharper.GlobalTools \
       powershell \
       dotnet-reportgenerator-globaltool \
       csharpier"


installDotNet() {
    # Installing .net
    for CHANNEL in $VERSIONS_TO_INSTALL
    do
      echo "**********************************************************************************************"
      echo "* Installing dotnet $CHANNEL"
      echo "**********************************************************************************************"
      echo ""
        /bin/bash /usr/src/app/dotnet-install.sh --install-dir "$DOTNET_ROOT" -channel "$CHANNEL"
        ls -laR $DOTNET_ROOT
    done
}

update() {

    echo "Updating packages:"
    for PACKAGE in ${TOOLS}; do
        echo "* Updating $PACKAGE..."
        dotnet tool update --local "$PACKAGE" || dotnet tool install --local "$PACKAGE" --create-manifest-if-needed
    done
    echo "All packages updated"
    dotnet tool list
}

installDotNet

ls -laR "$DOTNET_ROOT"

[ -d "$DOTNET_ROOT" ] || die "Dotnet not installed"
[ -d "$DOTNET_ROOT/dotnet" ] || die "Dotnet binaries not installed"

export PATH="$PATH:$HOME/.dotnet/tools"

echo "HOME: $HOME"

echo "Installed SDKS:"
dotnet --list-sdks

echo "Waiting for start"
sleep 30

echo "Listing Nuget Sources"
dotnet nuget list source

echo "Clearing everything"
dotnet nuget locals all --clear

echo "Restoring tools"
dotnet tool restore



dotnet tool list

echo "Installing tools:"
for PACKAGE in ${TOOLS}; do
    echo "* Installing $PACKAGE..."
    dotnet tool install --local "$PACKAGE" --create-manifest-if-needed
done

echo "All tools installed"

dotnet tool list

while sleep 120; do

    installDotNet

    update

    echo "Waiting for new packages..."
done
