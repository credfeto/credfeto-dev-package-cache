#! /bin/sh

die() {
    echo
    echo "$@"
    exit 1
}

# Ensure CA Certs are installed
apt update && apt upgrade -y && apt install ca-certificates bash -y
update-ca-certificates

export PROXY_HOST=http://builds.dotnet.local:5554/dotnet
export DOTNET_ROOT="/usr/share/dotnet"

echo "Changing install script to use local proxy cache.."
sed -i "s|https://builds.dotnet.microsoft.com/dotnet|$PROXY_HOST|g" "/usr/src/app/dotnet-install.sh"
sed -i "s|https://ci.dot.net/public|$PROXY_HOST/dotnet|g" "/usr/src/app/dotnet-install.sh"
#sed -i "s|https://aka.ms/dotnet|https://builds.dotnet.local:5555/dotnet|g" "/usr/src/app/dotnet-install.sh"
echo "Changing install script to use local proxy cache..."



VERSIONS_TO_INSTALL="8.0 9.0 10.0"

# Installing .net
for VERSION in $VERSIONS_TO_INSTALL
do
  echo "**********************************************************************************************"
  echo "* Installing dotnet $VERSION"
  echo "**********************************************************************************************"
  echo ""
    /bin/bash /usr/src/app/dotnet-install.sh --install-dir "$DOTNET_ROOT" -channel "$CHANNEL"
done

[ -d "$DOTNET_ROOT" ] || die "Dotnet not installed"
[ -d "$DOTNET_ROOT/dotnet" ] || die "Dotnet binaries not installed"


export PATH="$PATH:/root/.dotnet/tools"
TOOLS="sleet \
       TSQLLint \
       FunFair.BuildCheck \
       FunFair.BuildVersion \
       Credfeto.Changelog.Cmd \
       Credfeto.Package.Push \
       Credfeto.Package.Update \
       FunFair.Content.Packager.Cmd \
       FunFair.Content.PackageSigner.Cmd \
       JetBrains.ReSharper.GlobalTools \
       powershell \
       dotnet-reportgenerator-globaltool \
       csharpier"

echo "HOME: $HOME"

echo "Installed SDKS:"
dotnet --list-sdks

echo "Waiting for start"
sleep 30

echo "Listing Nuget Sources"
dotnet nuget list source

echo "Clearing everything"
dotnet nuget locals all --clear

echo "Restoring tools"
dotnet tool restore


update() {
    echo "Updating packages:"
    for PACKAGE in ${TOOLS}; do
        echo "* Updating $PACKAGE..."
        dotnet tool update --local "$PACKAGE" || dotnet tool install --local "$PACKAGE" --create-manifest-if-needed
    done
    echo "All packages updated"
    dotnet tool list
}

dotnet tool list

echo "Installing tools:"
for PACKAGE in ${TOOLS}; do
    echo "* Installing $PACKAGE..."
    dotnet tool install --local "$PACKAGE" --create-manifest-if-needed
done

echo "All tools installed"

dotnet tool list

while sleep 120; do
    update

    echo "Waiting for new packages..."
done
