events {
    worker_connections 1024;
}

http {
    upstream upstream-proxy {
        server https://proxy:8081;
        keepalive 64;
    }

    upstream upstream-api-nuget-local {
        server https://nuget:8081;
        keepalive 64;
    }

    upstream upstream-funfair-release-nuget-local {
        server https://funfair-release:8081;
        keepalive 64;
    }

    upstream upstream-funfair-prerelease-nuget-local {
        server https://funfair-prerelease:8081;
        keepalive 64;
    }

    server {
        listen                     5554;
        listen                     5555 ssl;
        http2                      on;
        server_name                builds.dotnet.local;

        ssl_protocols              TLSv1.3;
        ssl_certificate            ssl/builds.dotnet.local.pem;
        ssl_certificate_key        ssl/builds.dotnet.local.key;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        location / {
            proxy_pass          https://upstream-proxy;
            proxy_ssl_verify    off;
            proxy_http_version  1.1;
            proxy_set_header    Connection "";
            proxy_set_header    X-Forwarded-Host 'builds.dotnet.local:8081';
            proxy_buffers       16 256k;
            proxy_buffer_size   256k;
        }
    }


    server {
        listen                     5555 ssl;
        http2                      on;
        server_name                api.nuget.local;

        ssl_protocols              TLSv1.3;
        ssl_certificate            ssl/api.nuget.local.pem;
        ssl_certificate_key        ssl/api.nuget.local.key;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        location / {
            proxy_pass          https://upstream-api-nuget-local;
            proxy_ssl_verify    off;
            proxy_http_version  1.1;
            proxy_set_header    Connection "";
            proxy_set_header    X-Forwarded-Host 'api.nuget.local:8081';
            proxy_set_header    Host $http_host;
            proxy_set_header    X-NginX-Proxy true;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-HTTPS 'True';
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-Proto 'https';
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_buffers       16 256k;
            proxy_buffer_size   256k;

        }
    }

    server {
        listen                     5555 ssl;
        http2                      on;
        server_name                funfair.nuget.local;

        ssl_protocols              TLSv1.3;
        ssl_certificate            ssl/funfair.nuget.local.pem;
        ssl_certificate_key        ssl/funfair.nuget.local.key;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        location / {
            proxy_pass          https://upstream-funfair-release-nuget-local;
            proxy_ssl_verify    off;
            proxy_http_version  1.1;
            proxy_set_header    Connection "";
            proxy_set_header    X-Forwarded-Host 'funfair.nuget.local:8081';
            proxy_set_header    Host $http_host;
            proxy_set_header    X-NginX-Proxy true;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-HTTPS 'True';
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-Proto 'https';
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_buffers       16 256k;
            proxy_buffer_size   256k;
        }
    }

    server {
        listen                     5555 ssl;
        http2                      on;
        server_name                funfair-prerelease.nuget.local;

        ssl_protocols              TLSv1.3;
        ssl_certificate            ssl/funfair-prerelease.nuget.local.pem;
        ssl_certificate_key        ssl/funfair-prerelease.nuget.local.key;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        location / {
            proxy_pass          https://upstream-funfair-prerelease-nuget-local;
            proxy_ssl_verify    off;
            proxy_http_version  1.1;
            proxy_set_header    Connection "";
            proxy_set_header    X-Forwarded-Host  'funfair-prerelease.nuget.local:8081';
            proxy_set_header    Host $http_host;
            proxy_set_header    X-NginX-Proxy true;
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-HTTPS 'True';
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-Proto 'https';
            proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_buffers       16 256k;
            proxy_buffer_size   256k;
        }
    }

    server {
        listen                     5555 ssl;
        http2                      on;
        server_name                npm.local;

        ssl_protocols              TLSv1.3;
        ssl_certificate            ssl/npm.local.pem;
        ssl_certificate_key        ssl/npm.local.key;

        # set DNS resolver as Docker internal DNS
        resolver 127.0.0.11 valid=10s;
        resolver_timeout 5s;

        location / {
            proxy_pass          http://npm:4873;
            proxy_http_version  1.1;
            proxy_set_header    Connection "";
            proxy_set_header    X-Forwarded-Host  'npm.local:4873';
            proxy_set_header    Host $http_host;
            proxy_set_header    X-NginX-Proxy    true;
            proxy_set_header    X-Real-IP        $remote_addr;
            proxy_set_header    X-HTTPS   'True';
            proxy_set_header    X-Real-IP $remote_addr;
            proxy_set_header    X-Forwarded-Proto 'https';
            proxy_set_header    X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_buffers       16 256k;
            proxy_buffer_size   256k;
        }
    }

    server {
        listen                     80;
        server_name                localhost;

        location = /health {
                access_log off;
                add_header 'Content-Type' 'application/json';
                return 200 '{"status":"UP"}';
        }
    }
}
